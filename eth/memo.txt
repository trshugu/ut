geth --datadir ./ init ./g.json

geth --networkid "15" --nodiscover --datadir "./" console 2>> /home/ubuntu/eth_private_net/geth_err.log

geth --networkid "15" --nodiscover --datadir "./"

geth --datadir "./" attach ipc:\\.\pipe\geth.ipc

geth  --rpc --rpcport 8545 --rpcapi "web3,eth,net,personal" --rpccorsdomain "*" --rpcaddr "0.0.0.0" --datadir "./" --nodiscover --networkid 15



・コントラクトのアドレス
・コントラクトのABI
・solcがおかしい。
0.5.0 OK
0.5.12 OK
0.5.11 NG
0.5.6 NG
0.5.4 OK
0.5.5 NG

miner.setEtherbase(eth.accounts[1])



personal.newAccount("1212")
personal.newAccount("1212")

eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])


personal.unlockAccount(eth.accounts[0],"1212")
st = eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(5, "ether"), gas: 4600000, gasPrice: 100000000000})
eth.getTransaction(st)


personal.unlockAccount(eth.accounts[0],"1212")
st2 = eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(5, "ether")})
eth.getTransaction(st2)


personal.unlockAccount(eth.accounts[1],"1212")
st3 = eth.sendTransaction({from: eth.accounts[1], to: eth.accounts[2], value: web3.toWei(5, "ether")})
eth.getTransaction(st3)


personal.unlockAccount(eth.accounts[0],"1212")



bin = "0x608060405234801561001057600080fd5b5061036a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806389ea642f1161005b57806389ea642f1461010d578063bc391f8a14610190578063cd16ecbf146101d2578063cf546f5a1461020057610088565b806312a7b9141461008d57806357f28bed146100af57806366ce35d3146100d157806367e0badb146100ef575b600080fd5b610095610222565b604051808215151515815260200191505060405180910390f35b6100b761022b565b604051808215151515815260200191505060405180910390f35b6100d9610233565b6040518082815260200191505060405180910390f35b6100f7610270565b6040518082815260200191505060405180910390f35b610115610279565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015557808201518184015260208101905061013a565b50505050905090810190601f1680156101825780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101bc600480360360208110156101a657600080fd5b81019080803590602001909291905050506102b6565b6040518082815260200191505060405180910390f35b6101fe600480360360208110156101e857600080fd5b81019080803590602001909291905050506102c0565b005b6102086102ca565b604051808215151515815260200191505060405180910390f35b60006001905090565b600080905090565b600060405180807f686f67650000000000000000000000000000000000000000000000000000000081525060040190506040518091039020905090565b60008054905090565b60606040518060400160405280600381526020017f6e6f690000000000000000000000000000000000000000000000000000000000815250905090565b6000819050919050565b8060008190555050565b600060405180807f686f6765000000000000000000000000000000000000000000000000000000008152506004019050604051809103902060405180807f686f676500000000000000000000000000000000000000000000000000000000815250600401905060405180910390201490509056fea165627a7a72305820fbda9681fb3827005119c27b6b55d172b9e05d6bb1208478441bdb5d5b7bede00029"
abi = [{"constant":true,"inputs":[],"name":"getBool","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getFalse","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"kecca","outputs":[{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[],"name":"getNum","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getString","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":true,"inputs":[{"name":"i","type":"uint256"}],"name":"resNum","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":false,"inputs":[{"name":"n","type":"uint256"}],"name":"setNum","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"compStr","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"pure","type":"function"}]

con = eth.contract(abi)
personal.unlockAccount(eth.accounts[0],"1212")
myc = con.new({ from: eth.accounts[0], data: bin, gas: 4600000, gasPrice: 100000000000})
miner.start()


miner.stop()
cnt = eth.contract(abi).at(myc.address)





personal.unlockAccount(eth.accounts[0],"1212")
tra1 = cnt.setNum.sendTransaction(12345, {from: eth.accounts[0], data: 50})
personal.unlockAccount(eth.accounts[1],"1212")
tra2 = cnt.setNum.sendTransaction(56789, {from: eth.accounts[1], data: 20})
miner.start()


miner.stop()
eth.getTransaction(tra1)
eth.getTransaction(tra2)




t1 = cnt.setNum.sendTransaction(6,{from:eth.accounts[0]})
t2 = cnt.setNum(7,{from:eth.accounts[0]})
t3 = cnt.setNum.sendTransaction("777",{n:6,from:eth.accounts[0]})
t4 = cnt.setNum("898",{n:7,from:eth.accounts[0]})
miner.start()


miner.stop()
eth.getTransaction(t1)
eth.getTransaction(t2)
eth.getTransaction(t3)
eth.getTransaction(t4)






